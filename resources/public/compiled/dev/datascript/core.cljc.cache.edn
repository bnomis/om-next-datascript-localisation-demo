;; Analyzed by ClojureScript 1.7.228
{:use-macros nil, :excludes #{filter}, :name datascript.core, :imports nil, :requires {datascript.query datascript.query, btset datascript.btset, db datascript.db, datascript.btset datascript.btset, dq datascript.query, datascript.db datascript.db, datascript.pull-api datascript.pull-api, de datascript.impl.entity, dp datascript.pull-api, datascript.impl.entity datascript.impl.entity}, :uses {FilteredDB datascript.db}, :defs {t_datascript$core14761 {:num-fields 5, :protocols #{cljs.core/IDerefWithTimeout cljs.core/IPending cljs.core/IMeta cljs.core/IDeref cljs.core/IWithMeta}, :name datascript.core/t_datascript$core14761, :file "resources/public/compiled/dev/datascript/core.cljc", :type true, :anonymous true, :column 10, :line 170, :record false, :skip-protocol-flag #{cljs.core/IDerefWithTimeout cljs.core/IPending cljs.core/IMeta cljs.core/IDeref cljs.core/IWithMeta}}, pull {:name datascript.core/pull, :file "resources/public/compiled/dev/datascript/core.cljc", :line 25, :column 1, :end-line 25, :end-column 11, :meta {:file "/Users/simonb/src/clojurescript/om/om-next-datascript-localisation-demo/resources/public/compiled/dev/datascript/core.cljc", :line 25, :column 7, :end-line 25, :end-column 11}}, listen! {:protocol-inline nil, :meta {:file "/Users/simonb/src/clojurescript/om/om-next-datascript-localisation-demo/resources/public/compiled/dev/datascript/core.cljc", :line 116, :column 7, :end-line 116, :end-column 14, :arglists (quote ([conn callback] [conn key callback])), :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([conn callback] [conn key callback]), :arglists ([conn callback] [conn key callback]), :arglists-meta (nil nil)}}, :name datascript.core/listen!, :variadic false, :file "resources/public/compiled/dev/datascript/core.cljc", :end-column 14, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([conn callback] [conn key callback]), :arglists ([conn callback] [conn key callback]), :arglists-meta (nil nil)}, :method-params ([conn callback] [conn key callback]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 116, :end-line 116, :max-fixed-arity 3, :fn-var true, :arglists ([conn callback] [conn key callback])}, future-call {:protocol-inline nil, :meta {:file "/Users/simonb/src/clojurescript/om/om-next-datascript-localisation-demo/resources/public/compiled/dev/datascript/core.cljc", :line 188, :column 11, :end-line 188, :end-column 22, :private true, :arglists (quote ([f]))}, :private true, :name datascript.core/future-call, :variadic false, :file "resources/public/compiled/dev/datascript/core.cljc", :end-column 22, :method-params ([f]), :protocol-impl nil, :arglists-meta (nil nil), :column 4, :line 188, :end-line 188, :max-fixed-arity 1, :fn-var true, :arglists (quote ([f]))}, entity {:name datascript.core/entity, :file "resources/public/compiled/dev/datascript/core.cljc", :line 18, :column 1, :end-line 18, :end-column 13, :meta {:file "/Users/simonb/src/clojurescript/om/om-next-datascript-localisation-demo/resources/public/compiled/dev/datascript/core.cljc", :line 18, :column 7, :end-line 18, :end-column 13}}, to-hex-string {:protocol-inline nil, :meta {:file "/Users/simonb/src/clojurescript/om/om-next-datascript-localisation-demo/resources/public/compiled/dev/datascript/core.cljc", :line 210, :column 10, :end-line 210, :end-column 23, :private true, :arglists (quote ([n l]))}, :private true, :name datascript.core/to-hex-string, :variadic false, :file "resources/public/compiled/dev/datascript/core.cljc", :end-column 23, :method-params ([n l]), :protocol-impl nil, :arglists-meta (nil nil), :column 3, :line 210, :end-line 210, :max-fixed-arity 2, :fn-var true, :arglists (quote ([n l]))}, datoms {:protocol-inline nil, :meta {:file "/Users/simonb/src/clojurescript/om/om-next-datascript-localisation-demo/resources/public/compiled/dev/datascript/core.cljc", :line 65, :column 7, :end-line 65, :end-column 13, :arglists (quote ([db index] [db index c1] [db index c1 c2] [db index c1 c2 c3] [db index c1 c2 c3 c4])), :top-fn {:variadic false, :max-fixed-arity 6, :method-params ([db index] [db index c1] [db index c1 c2] [db index c1 c2 c3] [db index c1 c2 c3 c4]), :arglists ([db index] [db index c1] [db index c1 c2] [db index c1 c2 c3] [db index c1 c2 c3 c4]), :arglists-meta (nil nil nil nil nil)}}, :name datascript.core/datoms, :variadic false, :file "resources/public/compiled/dev/datascript/core.cljc", :end-column 13, :top-fn {:variadic false, :max-fixed-arity 6, :method-params ([db index] [db index c1] [db index c1 c2] [db index c1 c2 c3] [db index c1 c2 c3 c4]), :arglists ([db index] [db index c1] [db index c1 c2] [db index c1 c2 c3] [db index c1 c2 c3 c4]), :arglists-meta (nil nil nil nil nil)}, :method-params ([db index] [db index c1] [db index c1 c2] [db index c1 c2 c3] [db index c1 c2 c3 c4]), :protocol-impl nil, :arglists-meta (nil nil nil nil nil), :column 1, :line 65, :end-line 65, :max-fixed-arity 6, :fn-var true, :arglists ([db index] [db index c1] [db index c1 c2] [db index c1 c2 c3] [db index c1 c2 c3 c4])}, t_datascript$core14768 {:num-fields 5, :protocols #{cljs.core/IDerefWithTimeout cljs.core/IPending cljs.core/IMeta cljs.core/IDeref cljs.core/IWithMeta}, :name datascript.core/t_datascript$core14768, :file "resources/public/compiled/dev/datascript/core.cljc", :type true, :anonymous true, :column 8, :line 192, :record false, :skip-protocol-flag #{cljs.core/IDerefWithTimeout cljs.core/IPending cljs.core/IMeta cljs.core/IDeref cljs.core/IWithMeta}}, init-db {:name datascript.core/init-db, :file "resources/public/compiled/dev/datascript/core.cljc", :line 30, :column 1, :end-line 30, :end-column 14, :meta {:file "/Users/simonb/src/clojurescript/om/om-next-datascript-localisation-demo/resources/public/compiled/dev/datascript/core.cljc", :line 30, :column 7, :end-line 30, :end-column 14}}, t_datascript$core14771 {:num-fields 5, :protocols #{cljs.core/IDerefWithTimeout cljs.core/IPending cljs.core/IMeta cljs.core/IDeref cljs.core/IWithMeta}, :name datascript.core/t_datascript$core14771, :file "resources/public/compiled/dev/datascript/core.cljc", :type true, :anonymous true, :column 8, :line 192, :record false, :skip-protocol-flag #{cljs.core/IDerefWithTimeout cljs.core/IPending cljs.core/IMeta cljs.core/IDeref cljs.core/IWithMeta}}, is-filtered {:protocol-inline nil, :meta {:file "/Users/simonb/src/clojurescript/om/om-next-datascript-localisation-demo/resources/public/compiled/dev/datascript/core.cljc", :line 37, :column 7, :end-line 37, :end-column 18, :arglists (quote ([x]))}, :name datascript.core/is-filtered, :variadic false, :file "resources/public/compiled/dev/datascript/core.cljc", :end-column 18, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 37, :end-line 37, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x]))}, q {:name datascript.core/q, :file "resources/public/compiled/dev/datascript/core.cljc", :line 17, :column 1, :end-line 17, :end-column 8, :meta {:file "/Users/simonb/src/clojurescript/om/om-next-datascript-localisation-demo/resources/public/compiled/dev/datascript/core.cljc", :line 17, :column 7, :end-line 17, :end-column 8}}, index-range {:protocol-inline nil, :meta {:file "/Users/simonb/src/clojurescript/om/om-next-datascript-localisation-demo/resources/public/compiled/dev/datascript/core.cljc", :line 79, :column 7, :end-line 79, :end-column 18, :arglists (quote ([db attr start end]))}, :name datascript.core/index-range, :variadic false, :file "resources/public/compiled/dev/datascript/core.cljc", :end-column 18, :method-params ([db attr start end]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 79, :end-line 79, :max-fixed-arity 4, :fn-var true, :arglists (quote ([db attr start end]))}, pull-many {:name datascript.core/pull-many, :file "resources/public/compiled/dev/datascript/core.cljc", :line 26, :column 1, :end-line 26, :end-column 16, :meta {:file "/Users/simonb/src/clojurescript/om/om-next-datascript-localisation-demo/resources/public/compiled/dev/datascript/core.cljc", :line 26, :column 7, :end-line 26, :end-column 16}}, squuid {:protocol-inline nil, :meta {:file "/Users/simonb/src/clojurescript/om/om-next-datascript-localisation-demo/resources/public/compiled/dev/datascript/core.cljc", :line 218, :column 7, :end-line 218, :end-column 13, :arglists (quote ([] [msec])), :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [msec]), :arglists ([] [msec]), :arglists-meta (nil nil)}}, :name datascript.core/squuid, :variadic false, :file "resources/public/compiled/dev/datascript/core.cljc", :end-column 13, :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [msec]), :arglists ([] [msec]), :arglists-meta (nil nil)}, :method-params ([] [msec]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 218, :end-line 218, :max-fixed-arity 1, :fn-var true, :arglists ([] [msec])}, db? {:name datascript.core/db?, :file "resources/public/compiled/dev/datascript/core.cljc", :line 33, :column 1, :end-line 33, :end-column 10, :meta {:file "/Users/simonb/src/clojurescript/om/om-next-datascript-localisation-demo/resources/public/compiled/dev/datascript/core.cljc", :line 33, :column 7, :end-line 33, :end-column 10}}, create-conn {:protocol-inline nil, :meta {:file "/Users/simonb/src/clojurescript/om/om-next-datascript-localisation-demo/resources/public/compiled/dev/datascript/core.cljc", :line 92, :column 7, :end-line 92, :end-column 18, :arglists (quote ([] [schema])), :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [schema]), :arglists ([] [schema]), :arglists-meta (nil nil)}}, :name datascript.core/create-conn, :variadic false, :file "resources/public/compiled/dev/datascript/core.cljc", :end-column 18, :top-fn {:variadic false, :max-fixed-arity 1, :method-params ([] [schema]), :arglists ([] [schema]), :arglists-meta (nil nil)}, :method-params ([] [schema]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 92, :end-line 92, :max-fixed-arity 1, :fn-var true, :arglists ([] [schema])}, squuid-time-millis {:protocol-inline nil, :meta {:file "/Users/simonb/src/clojurescript/om/om-next-datascript-localisation-demo/resources/public/compiled/dev/datascript/core.cljc", :line 243, :column 7, :end-line 243, :end-column 25, :arglists (quote ([uuid]))}, :name datascript.core/squuid-time-millis, :variadic false, :file "resources/public/compiled/dev/datascript/core.cljc", :end-column 25, :method-params ([uuid]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 243, :end-line 243, :max-fixed-arity 1, :fn-var true, :arglists (quote ([uuid]))}, datom {:name datascript.core/datom, :file "resources/public/compiled/dev/datascript/core.cljc", :line 23, :column 1, :end-line 23, :end-column 12, :meta {:file "/Users/simonb/src/clojurescript/om/om-next-datascript-localisation-demo/resources/public/compiled/dev/datascript/core.cljc", :line 23, :column 7, :end-line 23, :end-column 12}}, entity-db {:protocol-inline nil, :meta {:file "/Users/simonb/src/clojurescript/om/om-next-datascript-localisation-demo/resources/public/compiled/dev/datascript/core.cljc", :line 19, :column 7, :end-line 19, :end-column 16, :arglists (quote ([entity]))}, :name datascript.core/entity-db, :variadic false, :file "resources/public/compiled/dev/datascript/core.cljc", :end-column 16, :method-params ([entity]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 19, :end-line 19, :max-fixed-arity 1, :fn-var true, :arglists (quote ([entity]))}, db {:protocol-inline nil, :meta {:file "/Users/simonb/src/clojurescript/om/om-next-datascript-localisation-demo/resources/public/compiled/dev/datascript/core.cljc", :line 160, :column 7, :end-line 160, :end-column 9, :arglists (quote ([conn]))}, :name datascript.core/db, :variadic false, :file "resources/public/compiled/dev/datascript/core.cljc", :end-column 9, :method-params ([conn]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 160, :end-line 160, :max-fixed-arity 1, :fn-var true, :arglists (quote ([conn]))}, transact-async {:protocol-inline nil, :meta {:file "/Users/simonb/src/clojurescript/om/om-next-datascript-localisation-demo/resources/public/compiled/dev/datascript/core.cljc", :line 200, :column 7, :end-line 200, :end-column 21, :arglists (quote ([conn tx-data] [conn tx-data tx-meta])), :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([conn tx-data] [conn tx-data tx-meta]), :arglists ([conn tx-data] [conn tx-data tx-meta]), :arglists-meta (nil nil)}}, :name datascript.core/transact-async, :variadic false, :file "resources/public/compiled/dev/datascript/core.cljc", :end-column 21, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([conn tx-data] [conn tx-data tx-meta]), :arglists ([conn tx-data] [conn tx-data tx-meta]), :arglists-meta (nil nil)}, :method-params ([conn tx-data] [conn tx-data tx-meta]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 200, :end-line 200, :max-fixed-arity 3, :fn-var true, :arglists ([conn tx-data] [conn tx-data tx-meta])}, data-readers {:name datascript.core/data-readers, :file "resources/public/compiled/dev/datascript/core.cljc", :line 136, :column 1, :end-line 136, :end-column 18, :meta {:file "/Users/simonb/src/clojurescript/om/om-next-datascript-localisation-demo/resources/public/compiled/dev/datascript/core.cljc", :line 136, :column 6, :end-line 136, :end-column 18}}, tx0 {:name datascript.core/tx0, :file "resources/public/compiled/dev/datascript/core.cljc", :line 35, :column 1, :end-line 35, :end-column 17, :const true, :meta {:file "/Users/simonb/src/clojurescript/om/om-next-datascript-localisation-demo/resources/public/compiled/dev/datascript/core.cljc", :line 35, :column 14, :end-line 35, :end-column 17, :const true}}, ->t_datascript$core14768 {:protocol-inline nil, :meta {:anonymous true, :protocols #{cljs.core/IDerefWithTimeout cljs.core/IPending cljs.core/IMeta cljs.core/IDeref cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IDerefWithTimeout cljs.core/IPending cljs.core/IMeta cljs.core/IDeref cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([future-call f res realized meta14769])), :file nil}, :protocols #{cljs.core/IDerefWithTimeout cljs.core/IPending cljs.core/IMeta cljs.core/IDeref cljs.core/IWithMeta}, :name datascript.core/->t_datascript$core14768, :variadic false, :file "resources/public/compiled/dev/datascript/core.cljc", :method-params ([future-call f res realized meta14769]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 8, :factory :positional, :line 192, :max-fixed-arity 5, :fn-var true, :arglists (quote ([future-call f res realized meta14769])), :skip-protocol-flag #{cljs.core/IDerefWithTimeout cljs.core/IPending cljs.core/IMeta cljs.core/IDeref cljs.core/IWithMeta}}, ->t_datascript$core14761 {:protocol-inline nil, :meta {:anonymous true, :protocols #{cljs.core/IDerefWithTimeout cljs.core/IPending cljs.core/IMeta cljs.core/IDeref cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IDerefWithTimeout cljs.core/IPending cljs.core/IMeta cljs.core/IDeref cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([conn tx-data tx-meta res meta14762])), :file nil}, :protocols #{cljs.core/IDerefWithTimeout cljs.core/IPending cljs.core/IMeta cljs.core/IDeref cljs.core/IWithMeta}, :name datascript.core/->t_datascript$core14761, :variadic false, :file "resources/public/compiled/dev/datascript/core.cljc", :method-params ([conn tx-data tx-meta res meta14762]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 10, :factory :positional, :line 170, :max-fixed-arity 5, :fn-var true, :arglists (quote ([conn tx-data tx-meta res meta14762])), :skip-protocol-flag #{cljs.core/IDerefWithTimeout cljs.core/IPending cljs.core/IMeta cljs.core/IDeref cljs.core/IWithMeta}}, resolve-tempid {:protocol-inline nil, :meta {:file "/Users/simonb/src/clojurescript/om/om-next-datascript-localisation-demo/resources/public/compiled/dev/datascript/core.cljc", :line 157, :column 7, :end-line 157, :end-column 21, :arglists (quote ([_db tempids tempid]))}, :name datascript.core/resolve-tempid, :variadic false, :file "resources/public/compiled/dev/datascript/core.cljc", :end-column 21, :method-params ([_db tempids tempid]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 157, :end-line 157, :max-fixed-arity 3, :fn-var true, :arglists (quote ([_db tempids tempid]))}, empty-db {:name datascript.core/empty-db, :file "resources/public/compiled/dev/datascript/core.cljc", :line 29, :column 1, :end-line 29, :end-column 15, :meta {:file "/Users/simonb/src/clojurescript/om/om-next-datascript-localisation-demo/resources/public/compiled/dev/datascript/core.cljc", :line 29, :column 7, :end-line 29, :end-column 15}}, datom? {:name datascript.core/datom?, :file "resources/public/compiled/dev/datascript/core.cljc", :line 32, :column 1, :end-line 32, :end-column 13, :meta {:file "/Users/simonb/src/clojurescript/om/om-next-datascript-localisation-demo/resources/public/compiled/dev/datascript/core.cljc", :line 32, :column 7, :end-line 32, :end-column 13}}, transact! {:protocol-inline nil, :meta {:file "/Users/simonb/src/clojurescript/om/om-next-datascript-localisation-demo/resources/public/compiled/dev/datascript/core.cljc", :line 107, :column 7, :end-line 107, :end-column 16, :arglists (quote ([conn tx-data] [conn tx-data tx-meta])), :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([conn tx-data] [conn tx-data tx-meta]), :arglists ([conn tx-data] [conn tx-data tx-meta]), :arglists-meta (nil nil)}}, :name datascript.core/transact!, :variadic false, :file "resources/public/compiled/dev/datascript/core.cljc", :end-column 16, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([conn tx-data] [conn tx-data tx-meta]), :arglists ([conn tx-data] [conn tx-data tx-meta]), :arglists-meta (nil nil)}, :method-params ([conn tx-data] [conn tx-data tx-meta]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 107, :end-line 107, :max-fixed-arity 3, :fn-var true, :arglists ([conn tx-data] [conn tx-data tx-meta])}, transact {:protocol-inline nil, :meta {:file "/Users/simonb/src/clojurescript/om/om-next-datascript-localisation-demo/resources/public/compiled/dev/datascript/core.cljc", :line 164, :column 7, :end-line 164, :end-column 15, :arglists (quote ([conn tx-data] [conn tx-data tx-meta])), :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([conn tx-data] [conn tx-data tx-meta]), :arglists ([conn tx-data] [conn tx-data tx-meta]), :arglists-meta (nil nil)}}, :name datascript.core/transact, :variadic false, :file "resources/public/compiled/dev/datascript/core.cljc", :end-column 15, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([conn tx-data] [conn tx-data tx-meta]), :arglists ([conn tx-data] [conn tx-data tx-meta]), :arglists-meta (nil nil)}, :method-params ([conn tx-data] [conn tx-data tx-meta]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 164, :end-line 164, :max-fixed-arity 3, :fn-var true, :arglists ([conn tx-data] [conn tx-data tx-meta])}, seek-datoms {:protocol-inline nil, :meta {:file "/Users/simonb/src/clojurescript/om/om-next-datascript-localisation-demo/resources/public/compiled/dev/datascript/core.cljc", :line 72, :column 7, :end-line 72, :end-column 18, :arglists (quote ([db index] [db index c1] [db index c1 c2] [db index c1 c2 c3] [db index c1 c2 c3 c4])), :top-fn {:variadic false, :max-fixed-arity 6, :method-params ([db index] [db index c1] [db index c1 c2] [db index c1 c2 c3] [db index c1 c2 c3 c4]), :arglists ([db index] [db index c1] [db index c1 c2] [db index c1 c2 c3] [db index c1 c2 c3 c4]), :arglists-meta (nil nil nil nil nil)}}, :name datascript.core/seek-datoms, :variadic false, :file "resources/public/compiled/dev/datascript/core.cljc", :end-column 18, :top-fn {:variadic false, :max-fixed-arity 6, :method-params ([db index] [db index c1] [db index c1 c2] [db index c1 c2 c3] [db index c1 c2 c3 c4]), :arglists ([db index] [db index c1] [db index c1 c2] [db index c1 c2 c3] [db index c1 c2 c3 c4]), :arglists-meta (nil nil nil nil nil)}, :method-params ([db index] [db index c1] [db index c1 c2] [db index c1 c2 c3] [db index c1 c2 c3 c4]), :protocol-impl nil, :arglists-meta (nil nil nil nil nil), :column 1, :line 72, :end-line 72, :max-fixed-arity 6, :fn-var true, :arglists ([db index] [db index c1] [db index c1 c2] [db index c1 c2 c3] [db index c1 c2 c3 c4])}, filter {:protocol-inline nil, :meta {:file "/Users/simonb/src/clojurescript/om/om-next-datascript-localisation-demo/resources/public/compiled/dev/datascript/core.cljc", :line 40, :column 7, :end-line 40, :end-column 13, :arglists (quote ([db pred]))}, :name datascript.core/filter, :variadic false, :file "resources/public/compiled/dev/datascript/core.cljc", :end-column 13, :method-params ([db pred]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 40, :end-line 40, :max-fixed-arity 2, :fn-var true, :arglists (quote ([db pred]))}, last-tempid {:name datascript.core/last-tempid, :file "resources/public/compiled/dev/datascript/core.cljc", :line 145, :column 1, :end-line 145, :end-column 17, :meta {:file "/Users/simonb/src/clojurescript/om/om-next-datascript-localisation-demo/resources/public/compiled/dev/datascript/core.cljc", :line 145, :column 6, :end-line 145, :end-column 17}}, rand-bits {:protocol-inline nil, :meta {:file "/Users/simonb/src/clojurescript/om/om-next-datascript-localisation-demo/resources/public/compiled/dev/datascript/core.cljc", :line 206, :column 8, :end-line 206, :end-column 17, :private true, :arglists (quote ([pow]))}, :private true, :name datascript.core/rand-bits, :variadic false, :file "resources/public/compiled/dev/datascript/core.cljc", :end-column 17, :method-params ([pow]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 206, :end-line 206, :max-fixed-arity 1, :fn-var true, :arglists (quote ([pow]))}, db-with {:protocol-inline nil, :meta {:file "/Users/simonb/src/clojurescript/om/om-next-datascript-localisation-demo/resources/public/compiled/dev/datascript/core.cljc", :line 61, :column 7, :end-line 61, :end-column 14, :arglists (quote ([db tx-data]))}, :name datascript.core/db-with, :variadic false, :file "resources/public/compiled/dev/datascript/core.cljc", :end-column 14, :method-params ([db tx-data]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 61, :end-line 61, :max-fixed-arity 2, :fn-var true, :arglists (quote ([db tx-data]))}, conn? {:protocol-inline nil, :meta {:file "/Users/simonb/src/clojurescript/om/om-next-datascript-localisation-demo/resources/public/compiled/dev/datascript/core.cljc", :line 87, :column 7, :end-line 87, :end-column 12, :arglists (quote ([conn]))}, :name datascript.core/conn?, :variadic false, :file "resources/public/compiled/dev/datascript/core.cljc", :end-column 12, :method-params ([conn]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 87, :end-line 87, :max-fixed-arity 1, :fn-var true, :arglists (quote ([conn]))}, unlisten! {:protocol-inline nil, :meta {:file "/Users/simonb/src/clojurescript/om/om-next-datascript-localisation-demo/resources/public/compiled/dev/datascript/core.cljc", :line 123, :column 7, :end-line 123, :end-column 16, :arglists (quote ([conn key]))}, :name datascript.core/unlisten!, :variadic false, :file "resources/public/compiled/dev/datascript/core.cljc", :end-column 16, :method-params ([conn key]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 123, :end-line 123, :max-fixed-arity 2, :fn-var true, :arglists (quote ([conn key]))}, with {:protocol-inline nil, :meta {:file "/Users/simonb/src/clojurescript/om/om-next-datascript-localisation-demo/resources/public/compiled/dev/datascript/core.cljc", :line 48, :column 7, :end-line 48, :end-column 11, :arglists (quote ([db tx-data] [db tx-data tx-meta])), :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([db tx-data] [db tx-data tx-meta]), :arglists ([db tx-data] [db tx-data tx-meta]), :arglists-meta (nil nil)}}, :name datascript.core/with, :variadic false, :file "resources/public/compiled/dev/datascript/core.cljc", :end-column 11, :top-fn {:variadic false, :max-fixed-arity 3, :method-params ([db tx-data] [db tx-data tx-meta]), :arglists ([db tx-data] [db tx-data tx-meta]), :arglists-meta (nil nil)}, :method-params ([db tx-data] [db tx-data tx-meta]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 48, :end-line 48, :max-fixed-arity 3, :fn-var true, :arglists ([db tx-data] [db tx-data tx-meta])}, touch {:name datascript.core/touch, :file "resources/public/compiled/dev/datascript/core.cljc", :line 27, :column 1, :end-line 27, :end-column 12, :meta {:file "/Users/simonb/src/clojurescript/om/om-next-datascript-localisation-demo/resources/public/compiled/dev/datascript/core.cljc", :line 27, :column 7, :end-line 27, :end-column 12}}, entid {:name datascript.core/entid, :file "resources/public/compiled/dev/datascript/core.cljc", :line 83, :column 1, :end-line 83, :end-column 11, :meta {:file "/Users/simonb/src/clojurescript/om/om-next-datascript-localisation-demo/resources/public/compiled/dev/datascript/core.cljc", :line 83, :column 6, :end-line 83, :end-column 11}}, tempid {:protocol-inline nil, :meta {:file "/Users/simonb/src/clojurescript/om/om-next-datascript-localisation-demo/resources/public/compiled/dev/datascript/core.cljc", :line 147, :column 7, :end-line 147, :end-column 13, :arglists (quote ([part] [part x])), :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([part] [part x]), :arglists ([part] [part x]), :arglists-meta (nil nil)}}, :name datascript.core/tempid, :variadic false, :file "resources/public/compiled/dev/datascript/core.cljc", :end-column 13, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([part] [part x]), :arglists ([part] [part x]), :arglists-meta (nil nil)}, :method-params ([part] [part x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 147, :end-line 147, :max-fixed-arity 2, :fn-var true, :arglists ([part] [part x])}, ->t_datascript$core14771 {:protocol-inline nil, :meta {:anonymous true, :protocols #{cljs.core/IDerefWithTimeout cljs.core/IPending cljs.core/IMeta cljs.core/IDeref cljs.core/IWithMeta}, :skip-protocol-flag #{cljs.core/IDerefWithTimeout cljs.core/IPending cljs.core/IMeta cljs.core/IDeref cljs.core/IWithMeta}, :factory :positional, :arglists (quote ([future-call f res realized meta14772])), :file nil}, :protocols #{cljs.core/IDerefWithTimeout cljs.core/IPending cljs.core/IMeta cljs.core/IDeref cljs.core/IWithMeta}, :name datascript.core/->t_datascript$core14771, :variadic false, :file "resources/public/compiled/dev/datascript/core.cljc", :method-params ([future-call f res realized meta14772]), :protocol-impl nil, :arglists-meta (nil nil), :anonymous true, :column 8, :factory :positional, :line 192, :max-fixed-arity 5, :fn-var true, :arglists (quote ([future-call f res realized meta14772])), :skip-protocol-flag #{cljs.core/IDerefWithTimeout cljs.core/IPending cljs.core/IMeta cljs.core/IDeref cljs.core/IWithMeta}}, -transact! {:protocol-inline nil, :meta {:file "/Users/simonb/src/clojurescript/om/om-next-datascript-localisation-demo/resources/public/compiled/dev/datascript/core.cljc", :line 98, :column 7, :end-line 98, :end-column 17, :arglists (quote ([conn tx-data tx-meta]))}, :name datascript.core/-transact!, :variadic false, :file "resources/public/compiled/dev/datascript/core.cljc", :end-column 17, :method-params ([conn tx-data tx-meta]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 98, :end-line 98, :max-fixed-arity 3, :fn-var true, :arglists (quote ([conn tx-data tx-meta]))}}, :require-macros {db datascript.db, datascript.db datascript.db, btset datascript.btset, datascript.btset datascript.btset}, :cljs.analyzer/constants {:seen #{res meta14762 tx-meta :tempids future-call entity :meta :private conn :else :db-after db/db? realized :transaction/filtered db datascript/Datom :db-before :tx-data de/entity? :db.part/tx :db/current-tx datascript/DB :error tx-data meta14772 quote :tx-meta conn? :arglists :listeners meta14769 f}, :order [de/entity? entity db/db? db :error :transaction/filtered :db-before :db-after :tx-data :tempids :tx-meta :meta :listeners conn? conn datascript/Datom datascript/DB :db.part/tx :db/current-tx tx-data tx-meta res meta14762 future-call :private :arglists quote f realized meta14769 meta14772 :else]}, :doc nil}